import { $Enums, UserRole } from '@prisma/client';
import { CorrectionCredit } from 'src/models/correction-credit/entities/correction-credit.entity';
import { CorrectionReply } from 'src/models/correction-reply/entities/correction-reply.entity';
import { Correction } from 'src/models/correction/entities/correction.entity';
import { CourseProgress } from 'src/models/course-progress/entities/course-progress.entity';
import { Course } from 'src/models/course/entities/course.entity';
import { Essay } from 'src/models/essay/entities/essay.entity';
import { LessonComment } from 'src/models/lesson-comment/entities/lesson-comment.entity';
import { Note } from 'src/models/note/entities/note.entity';
import { Space } from 'src/models/space/entities/space.entity';
import { Subscription } from 'src/models/subscription/entities/subscription.entity';
import { Vocabulary } from 'src/models/vocabulary/entities/vocabulary.entity';
import { IUser } from '../user.interface';
export declare class User implements IUser {
    id: string;
    username: string;
    email: string;
    passwordHash: string | null;
    role: UserRole;
    authProvider: $Enums.AuthProvider;
    authProviderId: string | null;
    firstName: string | null;
    lastName: string | null;
    profilePicture: string | null;
    isEmailVerified: boolean;
    nativeLanguage: string;
    lastLogin: Date | null;
    createdAt: Date;
    updatedAt: Date;
    deletedAt: Date | null;
    courses?: Course[];
    courseProgress?: CourseProgress[];
    notes?: Note[];
    vocabularies?: Vocabulary[];
    spaces?: Space[];
    essays?: Essay[];
    corrections?: Correction[];
    correctionReplies?: CorrectionReply[];
    lessonComments?: LessonComment[];
    subscriptions?: Subscription[];
    correctionCredits?: CorrectionCredit[];
}
